// pair<int, int> getFloorAndCeil(vector<int> &a, int n, int x) {
// 	// Write your code here.
//     pair<int, int> ans;
// 	a.push_back(x);
// 	sort(a.begin(), a.end());
// 	for (int i = 0; i < a.size(); i++){
// 		if(a[i]==x){
// 			ans.first = a[i-1];
// 			ans.second = a[i+1];
// 			break;
// 		}
// 	}
// 	return ans;
// }


pair<int, int> getFloorAndCeil(vector<int> &a, int n, int x) {

    // Write your code here.

    int low = 0;

    int high = n-1;

    pair<int,int> ans({-1,-1});

    while(low <= high)

    {

        int mid = (low + high)/2;

        if(a[mid] == x)

        {

            return {a[mid],a[mid]};

        }

        else if(a[mid] < x)

        {

            ans.first = a[mid];

            low = mid + 1;

        

        }

        else

        {

            ans.second = a[mid];

            high = mid-1;

        }

    }

    return ans;

}


